name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Faz o checkout do código
    - name: Checkout code
      uses: actions/checkout@v3

    # Configura o .NET Core
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x'  # Altere conforme a versão do .NET que você está usando

    # Restaura as dependências do projeto
    - name: Restore dependencies
      run: dotnet restore

    # Compila o projeto
    - name: Build the solution
      run: dotnet build --no-restore --configuration Release

    # Executa os testes unitários com coleta de cobertura
    - name: Run unit tests with coverage
      run: dotnet test tests/UnitTests/UnitTests.csproj --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"

    # Publica os resultados dos testes
    - name: Publish Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: '**/*.trx'

    # Publica o relatório de cobertura de código
    - name: Upload Code Coverage
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage
        path: '**/coverage.cobertura.xml'
